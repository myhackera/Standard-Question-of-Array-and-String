SOLUTION 1.) 
================================================>

class Solution:
    def maxArea(self, height: List[int]) -> int:
        
        n = len(height)
        area = 0
        maxarea = 0
        
        for i in range(n):
            for j in range(i+1, n):
                
                area = (j-i)*min(height[i], height[j])
                maxarea = max(area, maxarea)
                
        return maxarea
        
TC : O(N^2)


SOLUTION 2.)
================================================>

class Solution:
    def maxArea(self, height: List[int]) -> int:
        
        l = 0
        r = len(height)-1 
        area = maxarea = 0
        
        while l < r:
            area = (r-l)*(min(height[l], height[r]))
            maxarea = max(area, maxarea)
            if height[l] > height[r]:
                r -= 1
            else:
                l += 1
        return maxarea
        
TC : O(N)        
